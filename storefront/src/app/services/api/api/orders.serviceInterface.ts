/**
 * Medusa Storefront API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { GetOrders200Response } from '../model/models';
import { GetOrdersIdParameter } from '../model/models';
import { GetOrdersStatusParameter } from '../model/models';
import { StoreAcceptOrderTransfer } from '../model/models';
import { StoreDeclineOrderTransferRequest } from '../model/models';
import { StoreOrderResponse } from '../model/models';
import { StoreRequestOrderTransfer } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface OrdersServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * List Logged-in Customer\&#39;s Orders
     * Retrieve the orders of the logged-in customer. The orders can be filtered by fields such as &#x60;id&#x60;. The orders can also be sorted or paginated.
     * @param xPublishableApiKey Publishable API Key created in the Medusa Admin.
     * @param fields Comma-separated fields that should be included in the returned data. if a field is prefixed with &#x60;+&#x60; it will be added to the default fields, using &#x60;-&#x60; will remove it from the default fields. without prefix it will replace the entire default fields.
     * @param offset The number of items to skip when retrieving a list.
     * @param limit Limit the number of items returned in the list.
     * @param order The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with &#x60;-&#x60;.
     * @param id 
     * @param $and 
     * @param $or 
     * @param status 
     */
    getOrders(xPublishableApiKey: string, fields?: string, offset?: number, limit?: number, order?: string, id?: GetOrdersIdParameter, $and?: Array<object>, $or?: Array<object>, status?: GetOrdersStatusParameter, extraHttpRequestParams?: any): Observable<GetOrders200Response>;

    /**
     * Get an Order
     * Retrieve an order by its ID. You can expand the order\&#39;s relations or select the fields that should be returned.
     * @param id The order\&#39;s ID.
     * @param xPublishableApiKey Publishable API Key created in the Medusa Admin.
     * @param fields Comma-separated fields that should be included in the returned data. if a field is prefixed with &#x60;+&#x60; it will be added to the default fields, using &#x60;-&#x60; will remove it from the default fields. without prefix it will replace the entire default fields.
     */
    getOrdersId(id: string, xPublishableApiKey: string, fields?: string, extraHttpRequestParams?: any): Observable<StoreOrderResponse>;

    /**
     * Accept Order Transfer
     * Accept an order to be transfered to a customer\&#39;s account, which was specified when the transfer request was created. The transfer is requested previously either by the customer using the [Request Order Transfer Store API route](https://docs.medusajs.com/api/store#orders_postordersidtransferrequest), or by the admin using the [Request Order Transfer Admin API route](https://docs.medusajs.com/api/admin#orders_postordersidtransferrequest).
     * @param id The order\&#39;s ID.
     * @param xPublishableApiKey Publishable API Key created in the Medusa Admin.
     * @param fields Comma-separated fields that should be included in the returned data. if a field is prefixed with &#x60;+&#x60; it will be added to the default fields, using &#x60;-&#x60; will remove it from the default fields. without prefix it will replace the entire default fields.
     * @param storeAcceptOrderTransfer 
     */
    postOrdersIdTransferAccept(id: string, xPublishableApiKey: string, fields?: string, storeAcceptOrderTransfer?: StoreAcceptOrderTransfer, extraHttpRequestParams?: any): Observable<StoreOrderResponse>;

    /**
     * Cancel Order Transfer
     * Cancel an order transfer that the logged-in customer previously requested using the [Request Order Transfer](https://docs.medusajs.com/api/store#orders_postordersidtransferrequest) API route.
     * @param id The order\&#39;s ID.
     * @param xPublishableApiKey Publishable API Key created in the Medusa Admin.
     * @param fields Comma-separated fields that should be included in the returned data. if a field is prefixed with &#x60;+&#x60; it will be added to the default fields, using &#x60;-&#x60; will remove it from the default fields. without prefix it will replace the entire default fields.
     */
    postOrdersIdTransferCancel(id: string, xPublishableApiKey: string, fields?: string, extraHttpRequestParams?: any): Observable<StoreOrderResponse>;

    /**
     * Decline Order Transfer
     * Decline an order transfer previously requested, typically by the admin user using the [Request Order Transfer Admin API route](https://docs.medusajs.com/api/admin#orders_postordersidtransferrequest).
     * @param id The order\&#39;s ID.
     * @param xPublishableApiKey Publishable API Key created in the Medusa Admin.
     * @param fields Comma-separated fields that should be included in the returned data. if a field is prefixed with &#x60;+&#x60; it will be added to the default fields, using &#x60;-&#x60; will remove it from the default fields. without prefix it will replace the entire default fields.
     * @param storeDeclineOrderTransferRequest 
     */
    postOrdersIdTransferDecline(id: string, xPublishableApiKey: string, fields?: string, storeDeclineOrderTransferRequest?: StoreDeclineOrderTransferRequest, extraHttpRequestParams?: any): Observable<StoreOrderResponse>;

    /**
     * Request Order Transfer
     * Request an order to be transfered to the logged-in customer\&#39;s account. The transfer is confirmed using the [Accept Order Transfer](https://docs.medusajs.com/api/store#orders_postordersidtransferaccept) API route.
     * @param id The order\&#39;s ID.
     * @param xPublishableApiKey Publishable API Key created in the Medusa Admin.
     * @param fields Comma-separated fields that should be included in the returned data. if a field is prefixed with &#x60;+&#x60; it will be added to the default fields, using &#x60;-&#x60; will remove it from the default fields. without prefix it will replace the entire default fields.
     * @param storeRequestOrderTransfer 
     */
    postOrdersIdTransferRequest(id: string, xPublishableApiKey: string, fields?: string, storeRequestOrderTransfer?: StoreRequestOrderTransfer, extraHttpRequestParams?: any): Observable<StoreOrderResponse>;

}
