/**
 * Medusa Storefront API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AdminProductOption } from './admin-product-option';
import { AdminSalesChannel } from './admin-sales-channel';
import { AdminCollection } from './admin-collection';
import { AdminProductTag } from './admin-product-tag';
import { AdminProductType } from './admin-product-type';
import { AdminProductImage } from './admin-product-image';
import { AdminProductVariant } from './admin-product-variant';
import { AdminProductCategory } from './admin-product-category';


/**
 * The product\'s details.
 */
export interface AdminProduct { 
    collection?: AdminCollection;
    /**
     * The product\'s categories.
     */
    categories?: Array<AdminProductCategory>;
    /**
     * The sales channels that the product is available in.
     */
    sales_channels?: Array<AdminSalesChannel>;
    /**
     * The product\'s variants.
     */
    variants: Array<AdminProductVariant>;
    type: AdminProductType;
    /**
     * The product\'s tags.
     */
    tags?: Array<AdminProductTag>;
    /**
     * The product\'s length.
     */
    length: number;
    /**
     * The product\'s title.
     */
    title: string;
    /**
     * The product\'s status.
     */
    status: AdminProduct.StatusEnum;
    /**
     * The product\'s options.
     */
    options: Array<AdminProductOption>;
    /**
     * The product\'s description.
     */
    description: string;
    /**
     * The product\'s ID.
     */
    id: string;
    /**
     * The product\'s metadata, can hold custom key-value pairs.
     */
    metadata?: object;
    /**
     * The date the product was created.
     */
    created_at: string;
    /**
     * The date the product was updated.
     */
    updated_at: string;
    /**
     * The product\'s unique handle.
     */
    handle: string;
    /**
     * The product\'s subtitle.
     */
    subtitle: string;
    /**
     * Whether the product is a gift card.
     */
    is_giftcard: boolean;
    /**
     * The product\'s thumbnail.
     */
    thumbnail: string;
    /**
     * The product\'s width.
     */
    width: number;
    /**
     * The product\'s weight.
     */
    weight: number;
    /**
     * The product\'s height.
     */
    height: number;
    /**
     * The product\'s origin country.
     */
    origin_country: string;
    /**
     * The product\'s HS code.
     */
    hs_code: string;
    /**
     * The product\'s MID code.
     */
    mid_code: string;
    /**
     * The product\'s material.
     */
    material: string;
    /**
     * The ID of the collection that the product belongs to.
     */
    collection_id: string;
    /**
     * The ID of the product\'s type.
     */
    type_id: string;
    /**
     * The product\'s images.
     */
    images: Array<AdminProductImage>;
    /**
     * Whether discounts can be applied on the product.
     */
    discountable: boolean;
    /**
     * The ID of a product in an external system, such as an ERP or CMS.
     */
    external_id: string;
    /**
     * The date the product was deleted.
     */
    deleted_at: string;
}
export namespace AdminProduct {
    export type StatusEnum = 'draft' | 'proposed' | 'published' | 'rejected';
    export const StatusEnum = {
        Draft: 'draft' as StatusEnum,
        Proposed: 'proposed' as StatusEnum,
        Published: 'published' as StatusEnum,
        Rejected: 'rejected' as StatusEnum
    };
}


