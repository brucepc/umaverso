/**
 * Medusa Storefront API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AdminPromotionRule } from './admin-promotion-rule';


/**
 * The application method\'s details.
 */
export interface AdminApplicationMethod { 
    promotion?: object;
    /**
     * The application method\'s target rules.
     */
    target_rules?: Array<AdminPromotionRule>;
    /**
     * The application method\'s buy rules.
     */
    buy_rules?: Array<AdminPromotionRule>;
    /**
     * The application method\'s ID.
     */
    id: string;
    /**
     * The application method\'s type. If it\'s `fixed`, the promotion discounts a fixed amount. If it\'s `percentage`, the promotion discounts a percentage.
     */
    type?: AdminApplicationMethod.TypeEnum;
    /**
     * Which item does the promotion apply to. `items` mean the promotion applies to the cart\'s items; `shipping_methods` means the promotion applies to the cart\'s shipping methods; `order` means the promotion applies on the entire order.
     */
    target_type?: AdminApplicationMethod.TargetTypeEnum;
    /**
     * How is the promotion amount discounted. `each` means the discounted amount is applied on each applicable item; `across` means the discounted amount is split accross the applicable items.
     */
    allocation?: AdminApplicationMethod.AllocationEnum;
    /**
     * The amount to be discounted.
     */
    value?: number;
    /**
     * The application method\'s currency code.
     */
    currency_code?: string;
    /**
     * The max quantity allowed in the cart for the associated promotion to be applied.
     */
    max_quantity?: number;
    /**
     * The minimum quantity required for a `buyget` promotion to be applied. For example, if the promotion is a \"Buy 2 shirts get 1 free\", the value of this attribute is `2`.
     */
    buy_rules_min_quantity?: number;
    /**
     * The quantity that results from matching the `buyget` promotion\'s condition. For example, if the promotion is a \"Buy 2 shirts get 1 free\", the value of this attribute is `1`.
     */
    apply_to_quantity?: number;
}
export namespace AdminApplicationMethod {
    export type TypeEnum = 'fixed' | 'percentage';
    export const TypeEnum = {
        Fixed: 'fixed' as TypeEnum,
        Percentage: 'percentage' as TypeEnum
    };
    export type TargetTypeEnum = 'items' | 'shipping_methods' | 'order';
    export const TargetTypeEnum = {
        Items: 'items' as TargetTypeEnum,
        ShippingMethods: 'shipping_methods' as TargetTypeEnum,
        Order: 'order' as TargetTypeEnum
    };
    export type AllocationEnum = 'each' | 'across';
    export const AllocationEnum = {
        Each: 'each' as AllocationEnum,
        Across: 'across' as AllocationEnum
    };
}


