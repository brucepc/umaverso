/**
 * Medusa Storefront API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { OrderItem } from './order-item';
import { OrderLineItemAdjustment } from './order-line-item-adjustment';
import { OrderLineItemTaxLine } from './order-line-item-tax-line';


/**
 * The order line item\'s details.
 */
export interface OrderLineItem { 
    /**
     * The item\'s ID.
     */
    id: string;
    /**
     * The item\'s title.
     */
    title: string;
    /**
     * The item\'s subtitle.
     */
    subtitle?: string;
    /**
     * The item\'s thumbnail URL.
     */
    thumbnail?: string;
    /**
     * The ID of the associated variant.
     */
    variant_id?: string;
    /**
     * The ID of the associated product.
     */
    product_id?: string;
    /**
     * The item\'s product title.
     */
    product_title?: string;
    /**
     * The item\'s product description.
     */
    product_description?: string;
    /**
     * The item\'s product subtitle.
     */
    product_subtitle?: string;
    /**
     * The ID of the associated product\'s type.
     */
    product_type?: string;
    /**
     * The ID of the associated product\'s collection.
     */
    product_collection?: string;
    /**
     * The item\'s product handle.
     */
    product_handle?: string;
    /**
     * The item\'s variant SKU.
     */
    variant_sku?: string;
    /**
     * The item\'s variant barcode.
     */
    variant_barcode?: string;
    /**
     * The item\'s variant title.
     */
    variant_title?: string;
    /**
     * The associated variant\'s values for the associated product\'s options.
     */
    variant_option_values?: object;
    /**
     * Whether the item requires shipping.
     */
    requires_shipping: boolean;
    /**
     * Whether the item is discountable.
     */
    is_discountable: boolean;
    /**
     * Whether the item\'s price includes taxes.
     */
    is_tax_inclusive: boolean;
    /**
     * The original price of the item before a promotion or sale.
     */
    compare_at_unit_price?: number;
    /**
     * The item\'s price for a single quantity.
     */
    unit_price: number;
    /**
     * The item\'s quantity.
     */
    quantity: number;
    /**
     * The item\'s tax lines.
     */
    tax_lines?: Array<OrderLineItemTaxLine>;
    /**
     * The item\'s adjustments.
     */
    adjustments?: Array<OrderLineItemAdjustment>;
    detail: OrderItem;
    /**
     * The date the item was created.
     */
    created_at: string;
    /**
     * The date the item was updated.
     */
    updated_at: string;
    /**
     * The item\'s metadata, can hold custom key-value pairs.
     */
    metadata?: object;
    /**
     * The item\'s total including taxes and promotions.
     */
    original_total: number;
    /**
     * The item\'s total excluding taxes, including promotions.
     */
    original_subtotal: number;
    /**
     * The total taxes of the item excluding promotions.
     */
    original_tax_total: number;
    /**
     * The item\'s total for a single quantity, including taxes and promotions.
     */
    item_total: number;
    /**
     * The item\'s total for a single quantity, excluding taxes and including promotions.
     */
    item_subtotal: number;
    /**
     * The total taxes of a single quantity of the item, including promotions.
     */
    item_tax_total: number;
    /**
     * The item\'s total including taxes and promotions.
     */
    total: number;
    /**
     * The item\'s total excluding taxes, including promotions.
     */
    subtotal: number;
    /**
     * The total taxes of the item, including promotions.
     */
    tax_total: number;
    /**
     * The item\'s discount total.
     */
    discount_total: number;
    /**
     * The total taxes on the discounted amount.
     */
    discount_tax_total: number;
    /**
     * The total amount of the item that can be refunded.
     */
    refundable_total: number;
    /**
     * The total amount that can be refunded of a single quantity of the item.
     */
    refundable_total_per_unit: number;
    /**
     * The ID of the associated product\'s type.
     */
    product_type_id?: string;
}

