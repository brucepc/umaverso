/**
 * Medusa Storefront API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { BaseOrderItemDetail } from './base-order-item-detail';
import { BaseOrderLineItemTaxLine } from './base-order-line-item-tax-line';
import { BaseOrderLineItemAdjustment } from './base-order-line-item-adjustment';
import { BaseProductVariant } from './base-product-variant';
import { AdminProduct } from './admin-product';


export interface AdminOrderPreviewItemsInner { 
    /**
     * The item\'s ID.
     */
    id: string;
    /**
     * The item\'s title.
     */
    title: string;
    /**
     * The item\'s subtitle.
     */
    subtitle: string;
    /**
     * The URL of the item\'s thumbnail.
     */
    thumbnail: string;
    variant?: BaseProductVariant;
    /**
     * The ID of the associated variant.
     */
    variant_id: string;
    product?: AdminProduct;
    /**
     * The ID of the associated product.
     */
    product_id: string;
    /**
     * The title of the item\'s product.
     */
    product_title: string;
    /**
     * The description of the item\'s product.
     */
    product_description: string;
    /**
     * The subtitle of the item\'s product.
     */
    product_subtitle: string;
    /**
     * The ID of type of the item\'s product.
     */
    product_type: string;
    /**
     * The ID of collection of the item\'s product.
     */
    product_collection: string;
    /**
     * The handle of the item\'s product.
     */
    product_handle: string;
    /**
     * The SKU of the item\'s variant.
     */
    variant_sku: string;
    /**
     * The barcode of the item\'s variant.
     */
    variant_barcode: string;
    /**
     * The title of the item\'s variant.
     */
    variant_title: string;
    /**
     * The option values of the item\'s variant as key-value pairs. The key is the title of an option, and the value is the option\'s value.
     */
    variant_option_values: object;
    /**
     * Whether the item requires shipping.
     */
    requires_shipping: boolean;
    /**
     * Whether the item is discountable.
     */
    is_discountable: boolean;
    /**
     * Whether the item\'s price includes taxes.
     */
    is_tax_inclusive: boolean;
    /**
     * The original price of the item before a promotion or sale.
     */
    compare_at_unit_price?: number;
    /**
     * The item\'s unit price.
     */
    unit_price: number;
    /**
     * The item\'s quantity.
     */
    quantity: number;
    /**
     * The item\'s tax lines.
     */
    tax_lines?: Array<BaseOrderLineItemTaxLine>;
    /**
     * The item\'s adjustments.
     */
    adjustments?: Array<BaseOrderLineItemAdjustment>;
    detail: BaseOrderItemDetail;
    /**
     * The date the item was created.
     */
    created_at: string;
    /**
     * The date the item was updated.
     */
    updated_at: string;
    /**
     * The item\'s metadata, can hold custom key-value pairs.
     */
    metadata: object;
    /**
     * The item\'s total including taxes, excluding promotions.
     */
    original_total: number;
    /**
     * The item\'s total excluding taxes, including promotions.
     */
    original_subtotal: number;
    /**
     * The tax total of the item excluding promotions.
     */
    original_tax_total: number;
    /**
     * The item\'s total for a single unit including taxes and promotions.
     */
    item_total: number;
    /**
     * The item\'s total for a single unit excluding taxes, including promotions.
     */
    item_subtotal: number;
    /**
     * The tax total for a single unit of the item including promotions.
     */
    item_tax_total: number;
    /**
     * The item\'s total including taxes and promotions.
     */
    total: number;
    /**
     * The item\'s total excluding taxes, including promotions.
     */
    subtotal: number;
    /**
     * The tax total of the item including promotions.
     */
    tax_total: number;
    /**
     * The total of the item\'s discount / promotion.
     */
    discount_total: number;
    /**
     * The tax total of the item\'s discount / promotion
     */
    discount_tax_total: number;
    /**
     * The total refundable amount of the item\'s total.
     */
    refundable_total: number;
    /**
     * The total refundable amount of the item\'s total for a single unit.
     */
    refundable_total_per_unit: number;
    /**
     * The actions applied on an item.
     */
    actions?: Array<object>;
}

